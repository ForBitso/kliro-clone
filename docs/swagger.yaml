openapi: 3.0.3
info:
  title: KLIRO API
  version: 1.0.0
  description: |
    Backend API для регистрации, входа, восстановления пароля, Google OAuth, профиля пользователя и парсинга кредитных предложений.
servers:
  - url: https://api.kliro.uz
tags:
  - name: Auth
    description: Регистрация, вход, восстановление пароля, Google OAuth
  - name: User
    description: Профиль пользователя и управление аккаунтом

  - name: Bank
    description: API для работы с банковскими данными (парсинг и получение предложений)
paths:
  /auth/register:
    post:
      tags: [Auth]
      summary: Регистрация (email или телефон)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /auth/confirm-otp:
    post:
      tags: [Auth]
      summary: Подтвердить OTP для регистрации
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmOTPRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /auth/confirm-otp-create:
    post:
      tags: [Auth]
      summary: Создать пользователя после подтверждения OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmOTPRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /auth/set-region-password-final:
    post:
      tags: [Auth]
      summary: Установить регион и пароль (завершение регистрации)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetRegionPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '400':
          $ref: '#/components/responses/Error'
  /auth/login:
    post:
      tags: [Auth]
      summary: Вход по email или телефону и паролю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
  /auth/forgot-password:
    post:
      tags: [Auth]
      summary: Запросить OTP для восстановления пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /auth/reset-password:
    post:
      tags: [Auth]
      summary: Сбросить пароль по OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /auth/google:
    get:
      tags: [Auth]
      summary: Начать Google OAuth (редирект)
      parameters:
        - in: query
          name: redirect_url
          schema:
            type: string
          description: URL для редиректа после авторизации (по умолчанию https://kliro.uz/auth/google-complete)
          example: "https://kliro.uz/oauth-callback"
      responses:
        '302':
          description: Redirect to Google OAuth
  /auth/google/callback:
    get:
      tags: [Auth]
      summary: Callback Google OAuth (внутренний endpoint)
      parameters:
        - in: query
          name: code
          schema:
            type: string
          required: true
          description: Authorization code from Google
        - in: query
          name: state
          schema:
            type: string
          description: Encoded redirect URL
      responses:
        '302':
          description: Redirect to frontend with tokens or session_id
        '400':
          $ref: '#/components/responses/Error'
  /auth/google/complete:
    post:
      tags: [Auth]
      summary: Завершить регистрацию через Google (указать регион)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCompleteRequest'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '400':
          $ref: '#/components/responses/Error'


  /bank/currencies/new:
    get:
      tags: [Bank]
      summary: Получить последние курсы валют
      description: Возвращает курсы валют за последние 24 часа, сгруппированные по валютам (USD, RUB, EUR, KZT)
      responses:
        '200':
          description: Успешный ответ с курсами валют
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      USD:
                        type: array
                        items:
                          $ref: '#/components/schemas/Currency'
                      RUB:
                        type: array
                        items:
                          $ref: '#/components/schemas/Currency'
                      EUR:
                        type: array
                        items:
                          $ref: '#/components/schemas/Currency'
                      KZT:
                        type: array
                        items:
                          $ref: '#/components/schemas/Currency'
                  success:
                    type: boolean
                    example: true
              example:
                result:
                  USD:
                    - bank_name: "Asia Alliance Bank"
                      currency: "USD"
                      buy_rate: 12560
                      sell_rate: 12655
                      created_at: "2024-01-25T20:00:00Z"
                    - bank_name: "Hamkorbank"
                      currency: "USD"
                      buy_rate: 12560
                      sell_rate: 12640
                      created_at: "2024-01-25T20:00:00Z"
                  RUB:
                    - bank_name: "Kapitalbank"
                      currency: "RUB"
                      buy_rate: 148
                      sell_rate: 161
                      created_at: "2024-01-25T20:00:00Z"
                  EUR:
                    - bank_name: "O'zbekiston Milliy banki"
                      currency: "EUR"
                      buy_rate: 14650
                      sell_rate: 14850
                      created_at: "2024-01-25T20:00:00Z"
                  KZT:
                    - bank_name: "Tenge Bank"
                      currency: "KZT"
                      buy_rate: 22
                      sell_rate: 23.8
                      created_at: "2024-01-25T20:00:00Z"
                success: true
        '500':
          $ref: '#/components/responses/Error'
  /bank/currencies/by-date:
    get:
      tags: [Bank]
      summary: Получить курсы валют за определенную дату
      description: Возвращает курсы валют за указанную дату, сгруппированные по валютам
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
          required: true
          description: Дата в формате YYYY-MM-DD
          example: "2024-01-25"
      responses:
        '200':
          description: Успешный ответ с курсами валют за дату
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      USD:
                        type: array
                        items:
                          $ref: '#/components/schemas/Currency'
                      RUB:
                        type: array
                        items:
                          $ref: '#/components/schemas/Currency'
                      EUR:
                        type: array
                        items:
                          $ref: '#/components/schemas/Currency'
                      KZT:
                        type: array
                        items:
                          $ref: '#/components/schemas/Currency'
                  success:
                    type: boolean
                    example: true
              example:
                result:
                  USD:
                    - bank_name: "Asia Alliance Bank"
                      currency: "USD"
                      buy_rate: 12560
                      sell_rate: 12655
                      created_at: "2024-01-25T20:00:00Z"
                  RUB:
                    - bank_name: "Kapitalbank"
                      currency: "RUB"
                      buy_rate: 148
                      sell_rate: 161
                      created_at: "2024-01-25T20:00:00Z"
                success: true
        '400':
          description: Неверный формат даты
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    nullable: true
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Invalid date format. Use YYYY-MM-DD"
        '500':
          $ref: '#/components/responses/Error'

  /user/profile:
    get:
      tags: [User]
      summary: Получить профиль пользователя
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/UserProfile'
        '401':
          $ref: '#/components/responses/Error'
  /user/update-contact:
    post:
      tags: [User]
      summary: Запросить смену email или телефона (отправка OTP)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /user/confirm-update-contact:
    post:
      tags: [User]
      summary: Подтвердить смену email или телефона по OTP
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmUpdateContactRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /user/change-password:
    post:
      tags: [User]
      summary: Сменить пароль
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /user/change-region:
    post:
      tags: [User]
      summary: Сменить регион
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeRegionRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /user/add-contact:
    post:
      tags: [User]
      summary: Добавить дополнительный контакт (email или телефон)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /user/logout:
    post:
      tags: [User]
      summary: Выйти из аккаунта (добавить токен в черный список)
      description: |
        Добавляет текущий JWT токен в черный список в Redis.
        После logout токен становится недействительным для всех последующих запросов.
        OTP код не требуется.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешный выход из аккаунта
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      status:
                        type: string
                        example: logged out
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
              example:
                result: { status: "logged out" }
                success: true
                error: null
        '400':
          $ref: '#/components/responses/Error'
  /bank/microcredits/new:
    get:
      tags: [Bank]
      summary: Получить новые микрокредиты с пагинацией
      description: |
        Возвращает список новых микрокредитов от банков с поддержкой пагинации и сортировки.
        
        **Параметры пагинации:**
        - `page` - номер страницы (начиная с 0, по умолчанию 0)
        - `size` - размер страницы (1-100, по умолчанию 10)
        
        **Параметры сортировки:**
        - `sort` - поле для сортировки (bank_name, description, rate, term, amount, channel, created_at)
        - `direction` - направление сортировки (asc, desc, по умолчанию asc)
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Номер страницы (начиная с 0)
          example: 0
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Размер страницы
          example: 10
        - in: query
          name: sort
          schema:
            type: string
            enum: [bank_name, description, rate, term, amount, channel, created_at]
            default: bank_name
          description: Поле для сортировки
          example: bank_name
        - in: query
          name: direction
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Направление сортировки
          example: asc
      responses:
        '200':
          description: Успешный ответ с пагинированными данными
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      totalPages:
                        type: integer
                        description: Общее количество страниц
                        example: 5
                      totalElements:
                        type: integer
                        format: int64
                        description: Общее количество элементов
                        example: 47
                      first:
                        type: boolean
                        description: Первая ли это страница
                        example: true
                      last:
                        type: boolean
                        description: Последняя ли это страница
                        example: false
                      size:
                        type: integer
                        description: Размер страницы
                        example: 10
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Microcredit'
                        description: Массив микрокредитов
                      number:
                        type: integer
                        description: Номер текущей страницы
                        example: 0
                      sort:
                        type: array
                        items:
                          $ref: '#/components/schemas/Sort'
                        description: Параметры сортировки
                      numberOfElements:
                        type: integer
                        description: Количество элементов на текущей странице
                        example: 10
                      pageable:
                        $ref: '#/components/schemas/Pageable'
                      empty:
                        type: boolean
                        description: Пустой ли результат
                        example: false
                  success:
                    type: boolean
                    description: Успешность операции
                    example: true
                  error:
                    type: string
                    nullable: true
                    description: Сообщение об ошибке
                    example: null
              example:
                result:
                  totalPages: 22
                  totalElements: 106
                  first: true
                  last: false
                  size: 10
                  content:
                    - id: 1
                      bank_name: "Agrobank"
                      description: "Mikroqarz"
                      rate: "30 % dan"
                      term: "4 yil"
                      amount: "100 000 000 so'mgacha"
                      channel: "Bank"
                      created_at: "2025-08-05T00:57:51.765405Z"
                    - id: 2
                      bank_name: "APEXBANK"
                      description: "Onlayn kredit"
                      rate: "32dan - 42 % gacha"
                      term: "6 oy - 3 yil"
                      amount: "1 000 000dan - 100 000 000 so'mgacha"
                      channel: "BankOnlayn"
                      created_at: "2025-08-05T00:57:53.273873Z"
                  number: 0
                  sort:
                    - direction: "ASC"
                      nullHandling: "NATIVE"
                      ascending: true
                      property: "bank_name"
                      ignoreCase: false
                  numberOfElements: 10
                  pageable:
                    offset: 0
                    sort:
                      - direction: "ASC"
                        nullHandling: "NATIVE"
                        ascending: true
                        property: "bank_name"
                        ignoreCase: false
                    paged: true
                    pageNumber: 0
                    pageSize: 10
                    unpaged: false
                  empty: false
                success: true
                error: null
        '500':
          $ref: '#/components/responses/Error'


  /bank/autocredits/new:
    get:
      tags: [Bank]
      summary: Получить новые автокредиты с пагинацией
      description: |
        Возвращает список новых автокредитных предложений от банков с поддержкой пагинации и сортировки.
        
        **Параметры пагинации:**
        - `page` - номер страницы (начиная с 0, по умолчанию 0)
        - `size` - размер страницы (1-100, по умолчанию 10)
        
        **Параметры сортировки:**
        - `sort` - поле для сортировки (bank_name, description, rate, term, amount, channel, created_at)
        - `direction` - направление сортировки (asc, desc, по умолчанию asc)
        
        **Поля автокредита:**
        - `bank_name` - название банка
        - `description` - описание автокредита
        - `rate` - процентная ставка (как указано на сайте)
        - `term` - срок кредита (как указано на сайте)
        - `amount` - сумма кредита (как указано на сайте)
        - `channel` - канал получения кредита (Банк/Онлайн)
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Номер страницы (начиная с 0)
          example: 0
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Размер страницы
          example: 10
        - in: query
          name: sort
          schema:
            type: string
            enum: [bank_name, description, rate, term, amount, channel, created_at]
            default: bank_name
          description: Поле для сортировки
          example: bank_name
        - in: query
          name: direction
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Направление сортировки
          example: asc
      responses:
        '200':
          description: Успешный ответ с пагинированными данными
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      totalPages:
                        type: integer
                        description: Общее количество страниц
                        example: 1
                      totalElements:
                        type: integer
                        format: int64
                        description: Общее количество элементов
                        example: 7
                      first:
                        type: boolean
                        description: Первая ли это страница
                        example: true
                      last:
                        type: boolean
                        description: Последняя ли это страница
                        example: true
                      size:
                        type: integer
                        description: Размер страницы
                        example: 10
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Autocredit'
                        description: Массив автокредитов
                      number:
                        type: integer
                        description: Номер текущей страницы
                        example: 0
                      sort:
                        type: array
                        items:
                          $ref: '#/components/schemas/Sort'
                        description: Параметры сортировки
                      numberOfElements:
                        type: integer
                        description: Количество элементов на текущей странице
                        example: 7
                      pageable:
                        $ref: '#/components/schemas/Pageable'
                      empty:
                        type: boolean
                        description: Пустой ли результат
                        example: false
                  success:
                    type: boolean
                    description: Успешность операции
                    example: true
                  error:
                    type: string
                    nullable: true
                    description: Сообщение об ошибке
                    example: null
              example:
                result:
                  totalPages: 1
                  totalElements: 7
                  first: true
                  last: true
                  size: 10
                  content:
                    - id: 14
                      bank_name: "Agrobank"
                      description: "Avtokredit (Birlamchi bozor)"
                      rate: "24dan - 27 % gacha"
                      term: "4 yil - 5 yil"
                      amount: "Ko'rsatilmagan"
                      channel: "Bank"
                      created_at: "2025-08-05T08:46:41.776631Z"
                    - id: 15
                      bank_name: "Turonbank"
                      description: "Avtokredit (Ikkilamchi bozor)"
                      rate: "25 % dan"
                      term: "5 yil"
                      amount: "500 000 000 so'mgacha"
                      channel: "Bank"
                      created_at: "2025-08-05T08:46:42.776631Z"
                    - id: 16
                      bank_name: "Ipoteka Bank"
                      description: "Avtokredit (Yangi avtomobillar)"
                      rate: "29.9 %"
                      term: "3 yil - 7 yil"
                      amount: "1 000 000 000 so'mgacha"
                      channel: "Online"
                      created_at: "2025-08-05T08:46:43.776631Z"
                  number: 0
                  sort:
                    - direction: "ASC"
                      nullHandling: "NATIVE"
                      ascending: true
                      property: "bank_name"
                      ignoreCase: false
                  numberOfElements: 7
                  pageable:
                    offset: 0
                    sort:
                      - direction: "ASC"
                        nullHandling: "NATIVE"
                        ascending: true
                        property: "bank_name"
                        ignoreCase: false
                    paged: true
                    pageNumber: 0
                    pageSize: 10
                    unpaged: false
                  empty: false
                success: true
                error: null
        '500':
          $ref: '#/components/responses/Error'





  /bank/deposits/new:
    get:
      tags: [Bank]
      summary: Получить новые вклады с пагинацией
      description: |
        Возвращает список новых банковских вкладов с поддержкой пагинации и сортировки.
        
        **Параметры пагинации:**
        - `page` - номер страницы (начиная с 0, по умолчанию 0)
        - `size` - размер страницы (1-100, по умолчанию 10)
        
        **Параметры сортировки:**
        - `sort` - поле для сортировки (bank_name, rate, term_years, min_amount, title, created_at)
        - `direction` - направление сортировки (asc, desc, по умолчанию asc)
        
        **Поля вклада:**
        - `bank_name` - название банка
        - `rate` - процентная ставка
        - `term_years` - срок вклада в годах
        - `min_amount` - минимальная сумма вклада
        - `title` - название вклада
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Номер страницы (начиная с 0)
          example: 0
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Размер страницы
          example: 10
        - in: query
          name: sort
          schema:
            type: string
            enum: [bank_name, rate, term_years, min_amount, title, created_at]
            default: bank_name
          description: Поле для сортировки
          example: bank_name
        - in: query
          name: direction
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Направление сортировки
          example: asc
      responses:
        '200':
          description: Успешный ответ с пагинированными данными
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      totalPages:
                        type: integer
                        description: Общее количество страниц
                        example: 3
                      totalElements:
                        type: integer
                        format: int64
                        description: Общее количество элементов
                        example: 25
                      first:
                        type: boolean
                        description: Первая ли это страница
                        example: true
                      last:
                        type: boolean
                        description: Последняя ли это страница
                        example: false
                      size:
                        type: integer
                        description: Размер страницы
                        example: 10
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Deposit'
                        description: Массив вкладов
                      number:
                        type: integer
                        description: Номер текущей страницы
                        example: 0
                      sort:
                        type: array
                        items:
                          $ref: '#/components/schemas/Sort'
                        description: Параметры сортировки
                      numberOfElements:
                        type: integer
                        description: Количество элементов на текущей странице
                        example: 10
                      pageable:
                        $ref: '#/components/schemas/Pageable'
                      empty:
                        type: boolean
                        description: Пустой ли результат
                        example: false
                  success:
                    type: boolean
                    description: Успешность операции
                    example: true
              example:
                result:
                  totalPages: 3
                  totalElements: 25
                  first: true
                  last: false
                  size: 10
                  content:
                    - id: 1
                      bank_name: "O'zbekiston Milliy banki"
                      rate: "12.5%"
                      term_years: "1 год"
                      min_amount: "1000000 сум"
                      title: "Срочный вклад"
                      created_at: "2024-01-15T10:30:00Z"
                    - id: 2
                      bank_name: "Kapitalbank"
                      rate: "14.2%"
                      term_years: "2 года"
                      min_amount: "500000 сум"
                      title: "Накопительный вклад"
                      created_at: "2024-01-15T11:00:00Z"
                  number: 0
                  sort:
                    - direction: "ASC"
                      nullHandling: "NATIVE"
                      ascending: true
                      property: "bank_name"
                      ignoreCase: false
                  numberOfElements: 10
                  pageable:
                    offset: 0
                    sort:
                      - direction: "ASC"
                        nullHandling: "NATIVE"
                        ascending: true
                        property: "bank_name"
                        ignoreCase: false
                    paged: true
                    pageNumber: 0
                    pageSize: 10
                    unpaged: false
                  empty: false
                success: true
        '500':
          $ref: '#/components/responses/Error'


  /bank/cards/new:
    get:
      tags: [Bank]
      summary: Получить новые карты с пагинацией и фильтрацией
      description: |
        Возвращает список новых банковских карт с поддержкой пагинации, сортировки и фильтрации.
        
        **Параметры пагинации:**
        - `page` - номер страницы (начиная с 0, по умолчанию 0)
        - `size` - размер страницы (1-100, по умолчанию 10)
        
        **Параметры сортировки:**
        - `sort` - поле для сортировки (bank_name, title, currency, system, opening_type, created_at)
        - `direction` - направление сортировки (asc, desc, по умолчанию asc)
        
        **Параметры фильтрации:**
        - `currency` - фильтрация по валюте (например, "UZS", "USD")
        - `system` - фильтрация по платежной системе (например, "Visa", "MasterCard")
        
        **Поля карты:**
        - `bank_name` - название банка
        - `title` - название карты
        - `currency` - валюта карты
        - `system` - платежная система
        - `opening_type` - тип открытия (онлайн, в банке)
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Номер страницы (начиная с 0)
          example: 0
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Размер страницы
          example: 10
        - in: query
          name: sort
          schema:
            type: string
            enum: [bank_name, title, currency, system, opening_type, created_at]
            default: bank_name
          description: Поле для сортировки
          example: bank_name
        - in: query
          name: direction
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Направление сортировки
          example: asc
        - in: query
          name: currency
          schema:
            type: string
          description: Фильтрация по валюте
          example: "UZS"
        - in: query
          name: system
          schema:
            type: string
          description: Фильтрация по платежной системе
          example: "Visa"
      responses:
        '200':
          description: Успешный ответ с пагинированными данными
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      totalPages:
                        type: integer
                        description: Общее количество страниц
                        example: 4
                      totalElements:
                        type: integer
                        format: int64
                        description: Общее количество элементов
                        example: 35
                      first:
                        type: boolean
                        description: Первая ли это страница
                        example: true
                      last:
                        type: boolean
                        description: Последняя ли это страница
                        example: false
                      size:
                        type: integer
                        description: Размер страницы
                        example: 10
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Card'
                        description: Массив карт
                      number:
                        type: integer
                        description: Номер текущей страницы
                        example: 0
                      sort:
                        type: array
                        items:
                          $ref: '#/components/schemas/Sort'
                        description: Параметры сортировки
                      numberOfElements:
                        type: integer
                        description: Количество элементов на текущей странице
                        example: 10
                      pageable:
                        $ref: '#/components/schemas/Pageable'
                      empty:
                        type: boolean
                        description: Пустой ли результат
                        example: false
                  success:
                    type: boolean
                    description: Успешность операции
                    example: true
              example:
                result:
                  totalPages: 4
                  totalElements: 35
                  first: true
                  last: false
                  size: 10
                  content:
                    - id: 1
                      bank_name: "O'zbekiston Milliy banki"
                      title: "HUMO"
                      currency: "UZS"
                      system: "HUMO"
                      opening_type: "Онлайн"
                      created_at: "2024-01-15T10:30:00Z"
                    - id: 2
                      bank_name: "Kapitalbank"
                      title: "UzCard"
                      currency: "UZS"
                      system: "UzCard"
                      opening_type: "В банке"
                      created_at: "2024-01-15T11:00:00Z"
                    - id: 3
                      bank_name: "Asia Alliance Bank"
                      title: "Visa Classic"
                      currency: "USD"
                      system: "Visa"
                      opening_type: "Онлайн"
                      created_at: "2024-01-15T11:30:00Z"
                  number: 0
                  sort:
                    - direction: "ASC"
                      nullHandling: "NATIVE"
                      ascending: true
                      property: "bank_name"
                      ignoreCase: false
                  numberOfElements: 10
                  pageable:
                    offset: 0
                    sort:
                      - direction: "ASC"
                        nullHandling: "NATIVE"
                        ascending: true
                        property: "bank_name"
                        ignoreCase: false
                    paged: true
                    pageNumber: 0
                    pageSize: 10
                    unpaged: false
                  empty: false
                success: true
        '500':
          $ref: '#/components/responses/Error'


  /bank/transfers/new:
    get:
      tags: [Bank]
      summary: Получить новые переводы с пагинацией
      description: |
        Возвращает список новых переводных приложений с поддержкой пагинации и сортировки.
        
        **Параметры пагинации:**
        - `page` - номер страницы (начиная с 0, по умолчанию 0)
        - `size` - размер страницы (1-100, по умолчанию 10)
        
        **Параметры сортировки:**
        - `sort` - поле для сортировки (app_name, commission, limit_info, created_at)
        - `direction` - направление сортировки (asc, desc, по умолчанию asc)
        
        **Поля перевода:**
        - `app_name` - название приложения
        - `commission` - комиссия за переводы
        - `limit_info` - информация о лимитах и условиях
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Номер страницы (начиная с 0)
          example: 0
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Размер страницы
          example: 10
        - in: query
          name: sort
          schema:
            type: string
            enum: [app_name, commission, limit_info, created_at]
            default: app_name
          description: Поле для сортировки
          example: app_name
        - in: query
          name: direction
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Направление сортировки
          example: asc
      responses:
        '200':
          description: Успешный ответ с пагинированными данными
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      totalPages:
                        type: integer
                        description: Общее количество страниц
                        example: 1
                      totalElements:
                        type: integer
                        format: int64
                        description: Общее количество элементов
                        example: 20
                      first:
                        type: boolean
                        description: Первая ли это страница
                        example: true
                      last:
                        type: boolean
                        description: Последняя ли это страница
                        example: true
                      size:
                        type: integer
                        description: Размер страницы
                        example: 10
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Transfer'
                        description: Массив переводов
                      number:
                        type: integer
                        description: Номер текущей страницы
                        example: 0
                      sort:
                        type: array
                        items:
                          $ref: '#/components/schemas/Sort'
                        description: Параметры сортировки
                      numberOfElements:
                        type: integer
                        description: Количество элементов на текущей странице
                        example: 20
                      pageable:
                        $ref: '#/components/schemas/Pageable'
                      empty:
                        type: boolean
                        description: Пустой ли результат
                        example: false
                  success:
                    type: boolean
                    description: Успешность операции
                    example: true
                  error:
                    type: string
                    nullable: true
                    description: Сообщение об ошибке
                    example: null
              example:
                result:
                  totalPages: 1
                  totalElements: 20
                  first: true
                  last: true
                  size: 10
                  content:
                    - id: 1
                      app_name: "Davr Mobile"
                      commission: "0%"
                      limit_ru: "В рамках акции комиссия 0% на сумму до 3.5 млн сум в месяц. Далее 0.35%."
                      limit_uz: "Aksiya doirasida har oy 3.5 mln so'mgacha komissiya 0%. Undan so'ng 0.35%."
                      created_at: "2024-01-25T20:00:00Z"
                    - id: 2
                      app_name: "Paynet"
                      commission: "0%"
                      limit_ru: "В приложении каждый месяц можно бесплатно активировать один из двух пакетов услуг: «переводы без комиссии при месячном лимите 3 млн» или «кэшбэк до 2,2% за платежи»."
                      limit_uz: "Ilovada har oy bepul ravishda ikkita xizmat paketidan birini faollashtirish mumkin: «oylik 3 mln limit doirasida komissiyasiz o'tkazmalar» yoki «to'lovlar uchun 2,2% gacha keshbek»."
                      created_at: "2024-01-25T20:00:00Z"
                  number: 0
                  sort:
                    - direction: "ASC"
                      nullHandling: "NATIVE"
                      ascending: true
                      property: "app_name"
                      ignoreCase: false
                  numberOfElements: 20
                  pageable:
                    offset: 0
                    sort:
                      - direction: "ASC"
                        nullHandling: "NATIVE"
                        ascending: true
                        property: "app_name"
                        ignoreCase: false
                    paged: true
                    pageNumber: 0
                    pageSize: 10
                    unpaged: false
                  empty: false
                success: true
                error: null
        '500':
          $ref: '#/components/responses/Error'





  /bank/mortgages/new:
    get:
      tags: [Bank]
      summary: Получить новые ипотечные кредиты
      description: Возвращает список новых ипотечных кредитов с пагинацией и сортировкой
      parameters:
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: Количество записей на странице
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: sortBy
          in: query
          description: Поле для сортировки
          required: false
          schema:
            type: string
            enum: [bank_name, rate_max, rate_min, term_years, max_amount, initial_payment, created_at]
            default: created_at
        - name: sortOrder
          in: query
          description: Порядок сортировки
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Успешный ответ с пагинированными данными
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      totalPages:
                        type: integer
                        description: Общее количество страниц
                        example: 3
                      totalElements:
                        type: integer
                        format: int64
                        description: Общее количество элементов
                        example: 25
                      first:
                        type: boolean
                        description: Первая ли это страница
                        example: true
                      last:
                        type: boolean
                        description: Последняя ли это страница
                        example: false
                      size:
                        type: integer
                        description: Размер страницы
                        example: 10
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/MortgageData'
                        description: Массив ипотечных кредитов
                      number:
                        type: integer
                        description: Номер текущей страницы
                        example: 0
                      numberOfElements:
                        type: integer
                        description: Количество элементов на текущей странице
                        example: 10
                      empty:
                        type: boolean
                        description: Пустой ли результат
                        example: false
                  success:
                    type: boolean
                    description: Успешность операции
                    example: true
              example:
                result:
                  totalPages: 3
                  totalElements: 25
                  first: true
                  last: false
                  size: 10
                  content:
                    - id: 1
                      bank_name: "Infin Bank"
                      rate_max: 18.5
                      rate_min: 15.0
                      term_years: 20
                      max_amount: 500
                      initial_payment: 20
                      url: "https://www.infinbank.com/ru/private/credits/ipoteka/"
                      created_at: "2024-01-15T10:30:00Z"
                    - id: 2
                      bank_name: "SQB Bank"
                      rate_max: 19.0
                      rate_min: 16.0
                      term_years: 25
                      max_amount: 800
                      initial_payment: 15
                      url: "https://sqb.uz/individuals/credits/ipoteka-ru/"
                      created_at: "2024-01-15T10:30:00Z"
                  number: 0
                  numberOfElements: 10
                  empty: false
                success: true
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid parameters"
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /bank/parse:
    get:
      tags: [Bank]
      summary: Парсинг кредитных предложений с банковского сайта
      parameters:
        - in: query
          name: url
          schema:
            type: string
          required: true
          description: URL банковского сайта для парсинга
          example: "https://ru.ipakyulibank.uz/physical/kredity/mikrozaymy"
      responses:
        '200':
          description: Успешный парсинг
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      bank_name:
                        type: string
                        description: Название банка
                      url:
                        type: string
                        description: URL страницы
                      data:
                        type: object
                        description: Спарсенные данные
                  success:
                        type: boolean
                        example: true
                  error:
                    type: string
                    nullable: true
                    example: null
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
          
  /bank/parse-currency:
    get:
      tags: [Bank]
      summary: Парсинг курсов валют с банковского сайта
      parameters:
        - in: query
          name: url
          schema:
            type: string
          required: true
          description: URL банковского сайта с курсами валют
          example: "https://bank.uz/currency"
      responses:
        '200':
          description: Успешный парсинг курсов валют
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      bank_name:
                        type: string
                        description: Название банка
                      url:
                        type: string
                        description: URL страницы
                      rates:
                        type: array
                        items:
                          type: object
                          properties:
                            currency:
                              type: string
                              example: "USD"
                            buy:
                              type: number
                              example: 12560
                            sell:
                              type: number
                              example: 12655
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
          
  /bank/parse-autocredit:
    get:
      tags: [Bank]
      summary: Парсинг автокредита с банковского сайта
      parameters:
        - in: query
          name: url
          schema:
            type: string
          required: true
          description: URL банковского сайта с автокредитом
          example: "https://aloqabank.uz/ru/private/crediting/avtokredit-birlamchi-bozor-uchun/"
      responses:
        '200':
          description: Успешный парсинг автокредита
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/Autocredit'
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
          
  /bank/parse-transfer:
    get:
      tags: [Bank]
      summary: Парсинг переводов по URL
      parameters:
        - in: query
          name: url
          required: true
          schema:
            type: string
          description: URL страницы для парсинга
          example: "https://bank.uz/perevodi"
      responses:
        '200':
          description: Успешный ответ с данными переводов
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transfer'
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
          
  /bank/parse-transfer-goquery:
    get:
      tags: [Bank]
      summary: Парсинг переводов с использованием goquery
      parameters:
        - in: query
          name: url
          required: true
          schema:
            type: string
          description: URL страницы для парсинга
          example: "https://bank.uz/perevodi"
      responses:
        '200':
          description: Успешный ответ с данными переводов
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transfer'
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
          
  /bank/parse-mortgage:
    get:
      tags: [Bank]
      summary: Парсинг ипотеки
      parameters:
        - name: url
          in: query
          description: URL страницы для парсинга
          required: true
          schema:
            type: string
            format: uri
      responses:
        '200':
          description: Успешный парсинг
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/MortgageData'
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
          
  /bank/parse-mortgage-goquery:
    get:
      tags: [Bank]
      summary: Парсинг ипотеки с использованием goquery
      parameters:
        - in: query
          name: url
          schema:
            type: string
          required: true
          description: URL банковского сайта с ипотечным кредитом
          example: "https://example.com/mortgage-page"
      responses:
        '200':
          description: Успешный ответ с результатом парсинга
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/Mortgage'
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
          
  /bank/parse-deposit:
    get:
      tags: [Bank]
      summary: Парсинг вкладов с банковского сайта
      parameters:
        - in: query
          name: url
          schema:
            type: string
          required: true
          description: URL банковского сайта с вкладами
          example: "https://bank.uz/deposits"
      responses:
        '200':
          description: Успешный парсинг вкладов
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Deposit'
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
          
  /bank/parse-card:
    get:
      tags: [Bank]
      summary: Парсинг карт с банковского сайта
      parameters:
        - in: query
          name: url
          schema:
            type: string
          required: true
          description: URL банковского сайта с картами
          example: "https://bank.uz/cards"
      responses:
        '200':
          description: Успешный парсинг карт
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Card'
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
          
  /bank/parse-microcredit:
    get:
      tags: [Bank]
      summary: Парсинг микрокредитов
      parameters:
        - in: query
          name: url
          schema:
            type: string
            format: uri
          required: true
          description: URL страницы для парсинга микрокредитов
          example: "https://bank.uz/uz/credits/mikrozaymy"
      responses:
        '200':
          description: Успешный парсинг микрокредитов
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Microcredit'
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
          
  /bank/update-transfers:
    get:
      tags: [Bank]
      summary: Обновление переводов в базе данных
      description: Парсит переводы и обновляет базу данных
      responses:
        '200':
          description: Успешное обновление
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Transfers updated successfully"
                      count:
                        type: integer
                        example: 50
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
                '500':
          $ref: '#/components/responses/Error'




 


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        phone:
          type: string
      example:
        email: user@example.com
    ConfirmOTPRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        otp:
          type: string
      example:
        email: user@example.com
        otp: "123456"
    SetRegionPasswordRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        region_id:
          type: integer
        password:
          type: string
      required: [region_id, password]
      example:
        email: user@example.com
        region_id: 1
        password: "password123"
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        password:
          type: string
      required: [password]
      example:
        email: user@example.com
        password: "password123"
    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
      example:
        email: user@example.com
    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        otp:
          type: string
        password:
          type: string
      required: [otp, password]
      example:
        email: user@example.com
        otp: "123456"
        password: "newpassword"
    GoogleCompleteRequest:
      type: object
      properties:
        session_id:
          type: string
        region_id:
          type: integer
      required: [session_id, region_id]
      example:
        session_id: "abc123"
        region_id: 1
    Deposit:
      type: object
      properties:
        id:
          type: integer
          description: Уникальный идентификатор вклада
          example: 1
        bank_name:
          type: string
          description: Название банка
          example: "O'zbekiston Milliy banki"
        rate:
          type: string
          description: Процентная ставка
          example: "12.5%"
        term_years:
          type: string
          description: Срок вклада в годах
          example: "1 год"
        min_amount:
          type: string
          description: Минимальная сумма вклада
          example: "1000000 сум"
        title:
          type: string
          description: Название вклада
          example: "Срочный вклад"
        created_at:
          type: string
          format: date-time
          description: Дата создания записи
          example: "2024-01-15T10:30:00Z"
      required: [bank_name, rate, term_years, min_amount, title]
    Card:
      type: object
      properties:
        id:
          type: integer
          description: Уникальный идентификатор карты
          example: 1
        bank_name:
          type: string
          description: Название банка
          example: "O'zbekiston Milliy banki"
        title:
          type: string
          description: Название карты
          example: "HUMO"
        currency:
          type: string
          description: Валюта карты
          example: "UZS"
        system:
          type: string
          description: Платежная система
          example: "HUMO"
        opening_type:
          type: string
          description: Тип открытия карты
          example: "Онлайн"
        created_at:
          type: string
          format: date-time
          description: Дата создания записи
          example: "2024-01-15T10:30:00Z"
      required: [bank_name, title, currency, system, opening_type]
    UpdateContactRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
      example:
        email: new@example.com
    ConfirmUpdateContactRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        otp:
          type: string
      example:
        email: new@example.com
        otp: "654321"
    ChangePasswordRequest:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      required: [old_password, new_password]
      example:
        old_password: "oldpass"
        new_password: "newpass"
    ChangeRegionRequest:
      type: object
      properties:
        region_id:
          type: integer
      required: [region_id]
      example:
        region_id: 2
    AddContactRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
      example:
        phone: "+998901234567"



    UserProfileResult:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        phone:
          type: string
        region_id:
          type: integer
        name:
          type: string
        role:
          type: string
        category_id:
          type: integer
    Currency:
      type: object
      description: Структура данных курса валюты
      properties:
        id:
          type: integer
          description: Уникальный идентификатор
          example: 1
        bank_name:
          type: string
          description: Название банка
          example: "Asia Alliance Bank"
        currency:
          type: string
          description: Код валюты
          enum: [USD, RUB, EUR, KZT]
          example: "USD"
        buy_rate:
          type: number
          format: double
          description: Курс покупки валюты
          example: 12560
        sell_rate:
          type: number
          format: double
          nullable: true
          description: Курс продажи валюты (может быть null)
          example: 12655
        created_at:
          type: string
          format: date-time
          description: Дата создания записи
          example: "2024-01-25T20:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: Дата обновления записи
          example: "2024-01-25T20:00:00Z"
      required: [id, bank_name, currency, buy_rate, created_at, updated_at]
    Microcredit:
      type: object
      description: Структура данных микрокредита
      properties:
        id:
          type: integer
          description: Уникальный идентификатор
          example: 1
        bank_name:
          type: string
          description: Название банка
          example: "Agrobank"
        description:
          type: string
          description: Описание микрокредита
          example: "Mikroqarz"
        rate:
          type: string
          description: Процентная ставка (как указано на сайте)
          example: "30 % dan"
        term:
          type: string
          description: Срок кредита (как указано на сайте)
          example: "4 yil"
        amount:
          type: string
          description: Сумма кредита (как указано на сайте)
          example: "100 000 000 so'mgacha"
        channel:
          type: string
          description: Канал получения кредита (Банк/Онлайн)
          example: "Bank"
        created_at:
          type: string
          format: date-time
          description: Дата создания записи
          example: "2025-08-05T00:57:51.765405Z"
      required: [id, bank_name, description, rate, term, amount, channel, created_at]
    Autocredit:
      type: object
      description: Структура данных автокредита
      properties:
        id:
          type: integer
          description: Уникальный идентификатор
          example: 14
        bank_name:
          type: string
          description: Название банка
          example: "Agrobank"
        description:
          type: string
          description: Описание автокредита
          example: "Avtokredit (Birlamchi bozor)"
        rate:
          type: string
          description: Процентная ставка (как указано на сайте)
          example: "24dan - 27 % gacha"
        term:
          type: string
          description: Срок кредита (как указано на сайте)
          example: "4 yil - 5 yil"
        amount:
          type: string
          description: Сумма кредита (как указано на сайте)
          example: "Ko'rsatilmagan"
        channel:
          type: string
          description: Канал получения кредита (Банк/Онлайн)
          example: "Bank"
        created_at:
          type: string
          format: date-time
          description: Дата создания записи
          example: "2025-08-05T08:46:41.776631Z"
      required: [id, bank_name, description, rate, term, amount, channel, created_at]
    Transfer:
      type: object
      description: Структура данных перевода
      properties:
        id:
          type: integer
          description: Уникальный идентификатор
          example: 1
        app_name:
          type: string
          description: Название приложения
          example: "Davr Mobile"
        commission:
          type: string
          description: Комиссия за переводы
          example: "0%"
        limit_ru:
          type: string
          description: Информация о лимитах и условиях на русском языке
          example: "В рамках акции комиссия 0% на сумму до 3.5 млн сум в месяц. Далее 0.35%."
        limit_uz:
          type: string
          description: Информация о лимитах и условиях на узбекском языке
          example: "Aksiya doirasida har oy 3.5 mln so'mgacha komissiya 0%. Undan so'ng 0.35%."
        created_at:
          type: string
          format: date-time
          description: Дата создания записи
          example: "2024-01-25T20:00:00Z"
      required: [id, app_name, commission, limit_ru, limit_uz, created_at]
    MortgageData:
      type: object
      description: Структура данных ипотечного кредита
      properties:
        id:
          type: integer
          description: Уникальный идентификатор
          example: 1
        bank_name:
          type: string
          description: Название банка
          example: "Infin Bank"
        rate_max:
          type: number
          format: double
          description: Максимальная процентная ставка
          example: 18.5
        rate_min:
          type: number
          format: double
          description: Минимальная процентная ставка
          example: 15.0
        term_years:
          type: integer
          description: Срок кредита в годах
          example: 20
        max_amount:
          type: number
          format: double
          description: Максимальная сумма кредита (в миллионах)
          example: 500
        initial_payment:
          type: number
          format: double
          description: Первоначальный взнос в процентах
          example: 20
        url:
          type: string
          description: URL источника данных
          example: "https://www.infinbank.com/ru/private/credits/ipoteka/"
        created_at:
          type: string
          format: date-time
          description: Дата создания записи
          example: "2024-01-15T10:30:00Z"
      required: [id, bank_name, rate_max, rate_min, term_years, max_amount, initial_payment, url, created_at]
    Mortgage:
      type: object
      description: Структура данных ипотечного кредита
      properties:
        id:
          type: integer
          description: Уникальный идентификатор
          example: 1
        bank_name:
          type: string
          description: Название банка
          example: "Ipoteka Bank"
        description:
          type: string
          description: Описание ипотечного кредита
          example: "Ipoteka krediti (Yangi uylar)"
        rate:
          type: string
          description: Процентная ставка (как указано на сайте)
          example: "18.5 %"
        term:
          type: string
          description: Срок кредита (как указано на сайте)
          example: "20 yil"
        amount:
          type: string
          description: Сумма кредита (как указано на сайте)
          example: "2 000 000 000 so'mgacha"
        channel:
          type: string
          description: Канал получения кредита (Банк/Онлайн)
          example: "Bank"
        created_at:
          type: string
          format: date-time
          description: Дата создания записи
          example: "2025-08-05T08:46:41.776631Z"
      required: [id, bank_name, description, rate, term, amount, channel, created_at]

    Sort:
      type: object
      description: Параметры сортировки
      properties:
        direction:
          type: string
          description: Направление сортировки
          example: "ASC"
        nullHandling:
          type: string
          description: Обработка null значений
          example: "NATIVE"
        ascending:
          type: boolean
          description: Сортировка по возрастанию
          example: true
        property:
          type: string
          description: Поле для сортировки
          example: "bank_name"
        ignoreCase:
          type: boolean
          description: Игнорировать регистр
          example: false
    Pageable:
      type: object
      description: Параметры пагинации
      properties:
        offset:
          type: integer
          description: Смещение от начала
          example: 0
        sort:
          type: array
          items:
            $ref: '#/components/schemas/Sort'
          description: Параметры сортировки
        paged:
          type: boolean
          description: Используется ли пагинация
          example: true
        pageNumber:
          type: integer
          description: Номер страницы
          example: 0
        pageSize:
          type: integer
          description: Размер страницы
          example: 10
        unpaged:
          type: boolean
          description: Без пагинации
          example: false

  responses:
    SuccessStatus:
      description: Успешный ответ (статус)
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: object
                properties:
                  status:
                    type: string
              success:
                type: boolean
              error:
                type: string
                nullable: true
            example:
              result: { status: "otp sent" }
              success: true
    TokenResponse:
      description: Успешный ответ с токенами
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  accessTokenExpiry:
                    type: integer
                  refreshTokenExpiry:
                    type: integer
              success:
                type: boolean
              error:
                type: string
                nullable: true
            example:
              result:
                accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                accessTokenExpiry: 1712345678
                refreshTokenExpiry: 1712945678
              success: true


    UserProfile:
      description: Профиль пользователя
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: '#/components/schemas/UserProfileResult'
              success:
                type: boolean
              error:
                type: string
                nullable: true
            example:
              result:
                id: 1
                email: user@example.com
                phone: "+998901234567"
                region_id: 1
                name: "Иван"
                role: "user"
                category_id: 2
              success: true
    Error:
      description: Ошибка
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                nullable: true
              success:
                type: boolean
              error:
                type: string
            example:
              result: null
              success: false
              error: "Ошибка"
    Deposit:
      description: Данные вклада
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Deposit'
