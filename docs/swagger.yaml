openapi: 3.0.3
info:
  title: KLIRO API
  version: 1.0.0
  description: |
    Backend API для регистрации, входа, восстановления пароля, Google OAuth, профиля пользователя и парсинга кредитных предложений.
servers:
  - url: https://api.kliro.uz
tags:
  - name: Auth
    description: Регистрация, вход, восстановление пароля, Google OAuth
  - name: User
    description: Профиль пользователя и управление аккаунтом
  - name: Parser
    description: Парсинг кредитных предложений с банковских сайтов
  - name: Microcredits
    description: API для получения микрофинансовых предложений от банков
paths:
  /auth/register:
    post:
      tags: [Auth]
      summary: Регистрация (email или телефон)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /auth/confirm-otp:
    post:
      tags: [Auth]
      summary: Подтвердить OTP для регистрации
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmOTPRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /auth/confirm-otp-create:
    post:
      tags: [Auth]
      summary: Создать пользователя после подтверждения OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmOTPRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /auth/set-region-password-final:
    post:
      tags: [Auth]
      summary: Установить регион и пароль (завершение регистрации)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetRegionPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '400':
          $ref: '#/components/responses/Error'
  /auth/login:
    post:
      tags: [Auth]
      summary: Вход по email или телефону и паролю
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Error'
  /auth/forgot-password:
    post:
      tags: [Auth]
      summary: Запросить OTP для восстановления пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /auth/reset-password:
    post:
      tags: [Auth]
      summary: Сбросить пароль по OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /auth/google:
    get:
      tags: [Auth]
      summary: Начать Google OAuth (редирект)
      parameters:
        - in: query
          name: redirect_url
          schema:
            type: string
          description: URL для редиректа после авторизации (по умолчанию https://kliro.uz/auth/google-complete)
          example: "https://kliro.uz/oauth-callback"
      responses:
        '302':
          description: Redirect to Google OAuth
  /auth/google/callback:
    get:
      tags: [Auth]
      summary: Callback Google OAuth (внутренний endpoint)
      parameters:
        - in: query
          name: code
          schema:
            type: string
          required: true
          description: Authorization code from Google
        - in: query
          name: state
          schema:
            type: string
          description: Encoded redirect URL
      responses:
        '302':
          description: Redirect to frontend with tokens or session_id
        '400':
          $ref: '#/components/responses/Error'
  /auth/google/complete:
    post:
      tags: [Auth]
      summary: Завершить регистрацию через Google (указать регион)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCompleteRequest'
      responses:
        '200':
          $ref: '#/components/responses/TokenResponse'
        '400':
          $ref: '#/components/responses/Error'
  /parse:
    get:
      tags: [Parser]
      summary: Парсинг кредитных предложений с банковского сайта
      parameters:
        - in: query
          name: url
          schema:
            type: string
          required: true
          description: URL банковского сайта для парсинга
          example: "https://ru.ipakyulibank.uz/physical/kredity/mikrozaymy"
      responses:
        '200':
          $ref: '#/components/responses/ParserResponse'
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
  /parse-currency:
    get:
      tags: [Parser]
      summary: Парсинг курсов валют с банковского сайта
      parameters:
        - in: query
          name: url
          schema:
            type: string
          required: true
          description: URL банковского сайта с курсами валют
          example: "https://bank.uz/currency"
      responses:
        '200':
          $ref: '#/components/responses/CurrencyParserResponse'
        '400':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
  /user/profile:
    get:
      tags: [User]
      summary: Получить профиль пользователя
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/UserProfile'
        '401':
          $ref: '#/components/responses/Error'
  /user/update-contact:
    post:
      tags: [User]
      summary: Запросить смену email или телефона (отправка OTP)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /user/confirm-update-contact:
    post:
      tags: [User]
      summary: Подтвердить смену email или телефона по OTP
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmUpdateContactRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /user/change-password:
    post:
      tags: [User]
      summary: Сменить пароль
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /user/change-region:
    post:
      tags: [User]
      summary: Сменить регион
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeRegionRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /user/add-contact:
    post:
      tags: [User]
      summary: Добавить дополнительный контакт (email или телефон)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactRequest'
      responses:
        '200':
          $ref: '#/components/responses/SuccessStatus'
        '400':
          $ref: '#/components/responses/Error'
  /user/logout:
    post:
      tags: [User]
      summary: Выйти из аккаунта (добавить токен в черный список)
      description: |
        Добавляет текущий JWT токен в черный список в Redis.
        После logout токен становится недействительным для всех последующих запросов.
        OTP код не требуется.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешный выход из аккаунта
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      status:
                        type: string
                        example: logged out
                  success:
                    type: boolean
                    example: true
                  error:
                    type: string
                    nullable: true
                    example: null
              example:
                result: { status: "logged out" }
                success: true
                error: null
        '400':
          $ref: '#/components/responses/Error'
  /microcredits/new:
    get:
      tags: [Microcredits]
      summary: Получить новые микрофинансы с пагинацией
      description: |
        Возвращает список новых микрофинансовых предложений от банков с поддержкой пагинации и сортировки.
        
        **Параметры пагинации:**
        - `page` - номер страницы (начиная с 0, по умолчанию 0)
        - `size` - размер страницы (1-100, по умолчанию 10)
        
        **Параметры сортировки:**
        - `sort` - поле для сортировки (bank_name, max_amount, rate_max, rate_min, term_months, created_at)
        - `direction` - направление сортировки (asc, desc, по умолчанию asc)
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Номер страницы (начиная с 0)
          example: 0
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Размер страницы
          example: 10
        - in: query
          name: sort
          schema:
            type: string
            enum: [bank_name, max_amount, rate_max, rate_min, term_months, created_at]
            default: bank_name
          description: Поле для сортировки
          example: bank_name
        - in: query
          name: direction
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Направление сортировки
          example: asc
      responses:
        '200':
          description: Успешный ответ с пагинированными данными
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrocreditPaginationResponse'
              example:
                result:
                  totalPages: 5
                  totalElements: 47
                  first: true
                  last: false
                  size: 10
                  content:
                    - id: 1
                      bank_name: "TBC Bank"
                      max_amount: 50000000
                      rate_max: 24.5
                      rate_min: 18.0
                      term_months: 12
                      url: "https://tbcbank.uz/credit/mikrozajm"
                      created_at: "2024-01-15T10:30:00Z"
                    - id: 2
                      bank_name: "Ipak Yo'li Banki"
                      max_amount: 30000000
                      rate_max: 22.9
                      rate_min: 16.5
                      term_months: 24
                      url: "https://ru.ipakyulibank.uz/physical/kredity/mikrozaymy"
                      created_at: "2024-01-15T11:00:00Z"
                  number: 0
                  sort:
                    - direction: "ASC"
                      nullHandling: "NATIVE"
                      ascending: true
                      property: "bank_name"
                      ignoreCase: false
                  numberOfElements: 10
                  pageable:
                    offset: 0
                    sort:
                      - direction: "ASC"
                        nullHandling: "NATIVE"
                        ascending: true
                        property: "bank_name"
                        ignoreCase: false
                    paged: true
                    pageNumber: 0
                    pageSize: 10
                    unpaged: false
                  empty: false
                success: true
                error: null
        '500':
          $ref: '#/components/responses/Error'
  /microcredits/old:
    get:
      tags: [Microcredits]
      summary: Получить старые микрофинансы с пагинацией
      description: |
        Возвращает список старых микрофинансовых предложений от банков с поддержкой пагинации и сортировки.
        
        **Параметры пагинации:**
        - `page` - номер страницы (начиная с 0, по умолчанию 0)
        - `size` - размер страницы (1-100, по умолчанию 10)
        
        **Параметры сортировки:**
        - `sort` - поле для сортировки (bank_name, max_amount, rate_max, rate_min, term_months, created_at)
        - `direction` - направление сортировки (asc, desc, по умолчанию asc)
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Номер страницы (начиная с 0)
          example: 0
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Размер страницы
          example: 10
        - in: query
          name: sort
          schema:
            type: string
            enum: [bank_name, max_amount, rate_max, rate_min, term_months, created_at]
            default: bank_name
          description: Поле для сортировки
          example: bank_name
        - in: query
          name: direction
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Направление сортировки
          example: asc
      responses:
        '200':
          description: Успешный ответ с пагинированными данными
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrocreditPaginationResponse'
              example:
                result:
                  totalPages: 3
                  totalElements: 25
                  first: true
                  last: false
                  size: 10
                  content:
                    - id: 1
                      bank_name: "Aloqa Bank"
                      max_amount: 40000000
                      rate_max: 26.0
                      rate_min: 19.5
                      term_months: 18
                      url: "https://aloqabank.uz/uz/private/crediting/onlayn-mikroqarz/"
                      created_at: "2024-01-10T09:15:00Z"
                    - id: 2
                      bank_name: "Hamkor Bank"
                      max_amount: 25000000
                      rate_max: 23.5
                      rate_min: 17.0
                      term_months: 36
                      url: "https://hamkorbank.uz/physical/credits/microloan-online/"
                      created_at: "2024-01-10T10:45:00Z"
                  number: 0
                  sort:
                    - direction: "ASC"
                      nullHandling: "NATIVE"
                      ascending: true
                      property: "bank_name"
                      ignoreCase: false
                  numberOfElements: 10
                  pageable:
                    offset: 0
                    sort:
                      - direction: "ASC"
                        nullHandling: "NATIVE"
                        ascending: true
                        property: "bank_name"
                        ignoreCase: false
                    paged: true
                    pageNumber: 0
                    pageSize: 10
                    unpaged: false
                  empty: false
                success: true
                error: null
        '500':
          $ref: '#/components/responses/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        phone:
          type: string
      example:
        email: user@example.com
    ConfirmOTPRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        otp:
          type: string
      example:
        email: user@example.com
        otp: "123456"
    SetRegionPasswordRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        region_id:
          type: integer
        password:
          type: string
      required: [region_id, password]
      example:
        email: user@example.com
        region_id: 1
        password: "password123"
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        password:
          type: string
      required: [password]
      example:
        email: user@example.com
        password: "password123"
    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
      example:
        email: user@example.com
    ResetPasswordRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        otp:
          type: string
        password:
          type: string
      required: [otp, password]
      example:
        email: user@example.com
        otp: "123456"
        password: "newpassword"
    GoogleCompleteRequest:
      type: object
      properties:
        session_id:
          type: string
        region_id:
          type: integer
      required: [session_id, region_id]
      example:
        session_id: "abc123"
        region_id: 1
    UpdateContactRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
      example:
        email: new@example.com
    ConfirmUpdateContactRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
        otp:
          type: string
      example:
        email: new@example.com
        otp: "654321"
    ChangePasswordRequest:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      required: [old_password, new_password]
      example:
        old_password: "oldpass"
        new_password: "newpass"
    ChangeRegionRequest:
      type: object
      properties:
        region_id:
          type: integer
      required: [region_id]
      example:
        region_id: 2
    AddContactRequest:
      type: object
      properties:
        email:
          type: string
        phone:
          type: string
      example:
        phone: "+998901234567"
    LoanOfferDetails:
      type: object
      properties:
        bank_name:
          type: string
          nullable: true
          description: Название банка, извлеченное из URL
        url:
          type: string
          description: Оригинальный URL
        max_amount:
          type: number
          nullable: true
          description: Максимальная сумма кредита
        term_months:
          type: integer
          nullable: true
          description: Срок кредита в месяцах
        rate_min:
          type: number
          nullable: true
          description: Минимальная процентная ставка
        rate_max:
          type: number
          nullable: true
          description: Максимальная процентная ставка
    CurrencyRate:
      type: object
      properties:
        bank:
          type: string
          description: Название банка
          example: "Asia Alliance Bank"
        currency:
          type: string
          description: Код валюты
          example: "USD"
        buy:
          type: number
          nullable: true
          description: Курс покупки
          example: 12560
        sell:
          type: number
          nullable: true
          description: Курс продажи
          example: 12655
    CurrencyDetails:
      type: object
      properties:
        bank_name:
          type: string
          nullable: true
          description: Название банка из URL
          example: "bank"
        url:
          type: string
          description: Оригинальный URL
          example: "https://bank.uz/currency"
        rates:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyRate'
          description: Массив курсов валют всех банков
      example:
        bank_name: "ipakyulibank"
        url: "https://ru.ipakyulibank.uz/physical/kredity/mikrozaymy"
        max_amount: 100000000
        term_months: 60
        rate_min: 22.9
        rate_max: 31.9
    UserProfileResult:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        phone:
          type: string
        region_id:
          type: integer
        name:
          type: string
        role:
          type: string
        category_id:
          type: integer
    Microcredit:
      type: object
      description: Структура данных микрофинанса
      properties:
        id:
          type: integer
          description: Уникальный идентификатор
          example: 1
        bank_name:
          type: string
          description: Название банка
          example: "TBC Bank"
        max_amount:
          type: number
          format: double
          description: Максимальная сумма кредита в сумах
          example: 50000000
        rate_max:
          type: number
          format: double
          description: Максимальная процентная ставка
          example: 24.5
        rate_min:
          type: number
          format: double
          description: Минимальная процентная ставка
          example: 18.0
        term_months:
          type: integer
          description: Срок кредита в месяцах
          example: 12
        url:
          type: string
          description: Ссылка на предложение банка
          example: "https://tbcbank.uz/credit/mikrozajm"
        created_at:
          type: string
          format: date-time
          description: Дата создания записи
          example: "2024-01-15T10:30:00Z"
      required: [id, bank_name, max_amount, rate_max, rate_min, term_months, url, created_at]
    Sort:
      type: object
      description: Параметры сортировки
      properties:
        direction:
          type: string
          description: Направление сортировки
          example: "ASC"
        nullHandling:
          type: string
          description: Обработка null значений
          example: "NATIVE"
        ascending:
          type: boolean
          description: Сортировка по возрастанию
          example: true
        property:
          type: string
          description: Поле для сортировки
          example: "bank_name"
        ignoreCase:
          type: boolean
          description: Игнорировать регистр
          example: false
    Pageable:
      type: object
      description: Параметры пагинации
      properties:
        offset:
          type: integer
          description: Смещение от начала
          example: 0
        sort:
          type: array
          items:
            $ref: '#/components/schemas/Sort'
          description: Параметры сортировки
        paged:
          type: boolean
          description: Используется ли пагинация
          example: true
        pageNumber:
          type: integer
          description: Номер страницы
          example: 0
        pageSize:
          type: integer
          description: Размер страницы
          example: 10
        unpaged:
          type: boolean
          description: Без пагинации
          example: false
    MicrocreditPaginationResponse:
      type: object
      description: Ответ с пагинированными данными микрофинансов
      properties:
        result:
          type: object
          properties:
            totalPages:
              type: integer
              description: Общее количество страниц
              example: 5
            totalElements:
              type: integer
              format: int64
              description: Общее количество элементов
              example: 47
            first:
              type: boolean
              description: Первая ли это страница
              example: true
            last:
              type: boolean
              description: Последняя ли это страница
              example: false
            size:
              type: integer
              description: Размер страницы
              example: 10
            content:
              type: array
              items:
                $ref: '#/components/schemas/Microcredit'
              description: Массив микрофинансов
            number:
              type: integer
              description: Номер текущей страницы
              example: 0
            sort:
              type: array
              items:
                $ref: '#/components/schemas/Sort'
              description: Параметры сортировки
            numberOfElements:
              type: integer
              description: Количество элементов на текущей странице
              example: 10
            pageable:
              $ref: '#/components/schemas/Pageable'
            empty:
              type: boolean
              description: Пустой ли результат
              example: false
        success:
          type: boolean
          description: Успешность операции
          example: true
        error:
          type: string
          nullable: true
          description: Сообщение об ошибке
          example: null
  responses:
    SuccessStatus:
      description: Успешный ответ (статус)
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: object
                properties:
                  status:
                    type: string
              success:
                type: boolean
              error:
                type: string
                nullable: true
            example:
              result: { status: "otp sent" }
              success: true
    TokenResponse:
      description: Успешный ответ с токенами
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  accessTokenExpiry:
                    type: integer
                  refreshTokenExpiry:
                    type: integer
              success:
                type: boolean
              error:
                type: string
                nullable: true
            example:
              result:
                accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                accessTokenExpiry: 1712345678
                refreshTokenExpiry: 1712945678
              success: true
    ParserResponse:
      description: Результат парсинга кредитного предложения
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: '#/components/schemas/LoanOfferDetails'
              success:
                type: boolean
              error:
                type: string
                nullable: true
            example:
              result:
                bank_name: "ipakyulibank"
                url: "https://ru.ipakyulibank.uz/physical/kredity/mikrozaymy"
                max_amount: 100000000
                term_months: 60
                rate_min: 22.9
                rate_max: 31.9
              success: true
    CurrencyParserResponse:
      description: Результат парсинга курсов валют
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: '#/components/schemas/CurrencyDetails'
              success:
                type: boolean
              error:
                type: string
                nullable: true
            example:
              result:
                bank_name: "bank"
                url: "https://bank.uz/currency"
                rates:
                  - bank: "Asia Alliance Bank"
                    currency: "USD"
                    buy: 12560
                    sell: 12655
                  - bank: "Ipak Yo'li Banki"
                    currency: "USD"
                    buy: 12560
                    sell: 12680
              success: true
    UserProfile:
      description: Профиль пользователя
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                $ref: '#/components/schemas/UserProfileResult'
              success:
                type: boolean
              error:
                type: string
                nullable: true
            example:
              result:
                id: 1
                email: user@example.com
                phone: "+998901234567"
                region_id: 1
                name: "Иван"
                role: "user"
                category_id: 2
              success: true
    Error:
      description: Ошибка
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                nullable: true
              success:
                type: boolean
              error:
                type: string
            example:
              result: null
              success: false
              error: "Ошибка"